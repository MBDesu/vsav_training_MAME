<?xml version="1.0" encoding="UTF-8"?>
<mamelayout version="2">

  <element name="dir_input" defstate="5">
    <image state="1" file="images/1_dir.png" />
    <image state="2" file="images/2_dir.png" />
    <image state="3" file="images/3_dir.png" />
    <image state="4" file="images/4_dir.png" />
    <image state="5" file="images/5_dir.png" />
    <image state="6" file="images/6_dir.png" />
    <image state="7" file="images/7_dir.png" />
    <image state="8" file="images/8_dir.png" />
    <image state="9" file="images/9_dir.png" />
  </element>
  <element name="light_input" defstate="0">
    <image state="0" file="images/no_button.png" />
    <image state="1" file="images/L_button.png" />
  </element>
  <element name="medium_input" defstate="0">
    <image state="0" file="images/no_button.png" />
    <image state="1" file="images/M_button.png" />
  </element>
  <element name="heavy_input" defstate="0">
    <image state="0" file="images/no_button.png" />
    <image state="1" file="images/H_button.png" />
  </element>

  <element name="input_display_ticker">
    <rect>
      <bounds left="0" top="22.4" right="384" bottom="224" />
      <color red="0.7" green="0.7" blue="0.7" />
    </rect>
  </element>

  <element name="duration_label">
    <text string="999">
      <color alpha="1" red="0.57" green="0.91" blue="0.74"></color>
    </text>
  </element>
  
  <element name="stick_backdrop">
    <rect>
      <bounds x="0" y="283" width="34" height="15" />
      <color red="0" green="0" blue="0" />
    </rect>
  </element>

  <group name="input_display_entry_both">
    <bounds x="0" y="0" width="31" height="26" />
    <element ref="stick_backdrop">
      <bounds x="0" y="0" width="31" height="19" />
    </element>
    <element id="dir_inp" ref="dir_input">
      <bounds x="0" y="4" width="11" height="11" />
    </element>
    <element id="LP" ref="light_input">
      <bounds x="11" y="4" width="6" height="6" />
    </element>
    <element id="MP" ref="medium_input">
      <bounds x="17" y="4" width="6" height="6" />
    </element>
    <element id="HP" ref="heavy_input">
      <bounds x="23" y="4" width="6" height="6" />
    </element>
    <element id="LK" ref="light_input">
      <bounds x="11" y="9" width="6" height="6" />
    </element>
    <element id="MK" ref="medium_input">
      <bounds x="17" y="9" width="6" height="6" />
    </element>
    <element id="HK" ref="heavy_input">
      <bounds x="23" y="9" width="6" height="6" />
    </element>
    <element id="duration" ref="duration_label">
      <bounds x="0" y="19" width="31" height="7" />
    </element>
  </group>

  <view name="Input Display">
    <screen index="0">
      <bounds x="0" y="0" width="400" height="300" />
    </screen>
    <element id="inp_p1" ref="input_display_ticker" blend="multiply">
      <bounds x="0" y="271" width="400" height="29" />
    </element>
    <!-- <group ref="input_display_entry_both">
      <bounds x="0" y="272" width="31" height="26" />
    </group> -->
  </view>

  <script>
    <![CDATA[
      local hist_ent_width = 31
      local hist_ent_margin = 2
      local hist_ent_height = 26
      local hist_ent_y = 272
      local hist_ents = {}
      local buttons = { "LP", "MP", "HP", "LK", "MK", "HK" }

      file:set_resolve_tags_callback(function()
        view:set_prepare_items_callback(function()
          if #hist_ents > 999 then
            for i = 1, 499 do
              hist_ents[i] = nil
            end
            local items = file.views["Input Display"].items
            for i, entry in ipairs(hist_ents) do
              -- add input_display_entry_both groups to the view...somehow
            end
          end
        end)
      end)

      return {
        set_state = function(p1_input_history, p2_input_history)
          hist_ents[#hist_ents + 1] = p1_input_history
          --local buttons = { "LP", "MP", "HP", "LK", "MK", "HK" }
          --local items = file.views["Input Display"].items
          --items["dir_inp"]:set_state(p1_input_history.dir_input)
          --for _, button in pairs(buttons) do
            --items[button]:set_state(0)
          --end
          --for _, button in pairs(p1_input_history.input) do
            --items[button]:set_state(1)
          --end
        end
      }
    ]]>
  </script>

</mamelayout>